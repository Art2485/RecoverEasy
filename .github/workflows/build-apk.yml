# .github/workflows/build-apk.yml
name: Android CI – Build APK (auto-detect project dir)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Locate Android project (find gradlew)
        id: locate
        shell: bash
        run: |
          set -euxo pipefail
          # หาไฟล์ gradlew (สูงสุดลึก 3 ชั้น)
          F=$(git ls-files -z | tr '\0' '\n' | grep -E '(^|/)(gradlew)$' | head -n1 || true)
          if [ -z "$F" ]; then
            F=$(find . -maxdepth 3 -type f -name gradlew | head -n1 || true)
          fi
          if [ -z "$F" ]; then
            echo "❌ ไม่พบไฟล์ gradlew ในรีโปนี้"; exit 1
          fi
          D=$(dirname "$F")
          echo "PROJECT_DIR=$D" >> "$GITHUB_ENV"
          echo "✅ Project dir: $D"

      - name: Make gradlew executable
        shell: bash
        run: |
          set -euxo pipefail
          git config --global core.autocrlf false
          sed -i 's/\r$//' "$PROJECT_DIR/gradlew"
          chmod +x "$PROJECT_DIR/gradlew"

      - name: Repair Gradle wrapper JAR (Gradle 8+ compatible)
        shell: bash
        run: |
          set -euxo pipefail
          PROP="$PROJECT_DIR/gradle/wrapper/gradle-wrapper.properties"
          URL=$(grep distributionUrl "$PROP" | cut -d= -f2- | tr -d '\r')
          VER=$(echo "$URL" | sed -nE 's@.*/gradle-([0-9.]+)-bin\.zip@\1@p')
          curl -fsSL "$URL" -o gradle.zip
          unzip -p gradle.zip "gradle-$VER/lib/gradle-wrapper.jar" > "$PROJECT_DIR/gradle/wrapper/gradle-wrapper.jar"
          rm gradle.zip
          echo "Wrapper OK for Gradle $VER"

      - name: Accept licenses & install SDK packages (robust)
        shell: bash
        run: |
          set -euxo pipefail
          yes | sdkmanager --licenses || true
          sdkmanager "platform-tools" \
                     "platforms;android-34" "build-tools;34.0.0" \
                     "platforms;android-33" "build-tools;33.0.2" || true

      - name: Build Debug APK
        shell: bash
        run: |
          set -euxo pipefail
          "$PROJECT_DIR/gradlew" --warning-mode=all :app:assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.PROJECT_DIR }}/**/build/outputs/apk/**/*.apk
          if-no-files-found: error
