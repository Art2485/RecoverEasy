name: Android CI – Build APK (auto-detect & auto-wrapper)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # หาโฟลเดอร์โปรเจกต์จาก settings.gradle(.kts) หรือ build.gradle(.kts)
      - name: Locate Android project dir
        id: locate
        shell: bash
        run: |
          set -euxo pipefail
          CAND=$(git ls-files -z \
            | tr '\0' '\n' \
            | grep -E '(^|/)(settings\.gradle(\.kts)?|build\.gradle(\.kts)?)$' \
            | sort -u \
            | awk -F/ '{depth=NF-1; print depth"\t"$0}' \
            | sort -n | cut -f2- | head -n1 || true)
          if [ -z "$CAND" ]; then
            echo "❌ ไม่พบ settings.gradle / build.gradle ในรีโป"; exit 1
          fi
          D=$(dirname "$CAND")
          [ "$D" = "." ] && D="$PWD" || D="$PWD/$D"
          echo "PROJECT_DIR=$D" >> "$GITHUB_ENV"
          echo "✅ Project dir: $D"

      # ถ้าไม่มี gradlew ให้สร้าง Gradle wrapper อัตโนมัติ
      - name: Ensure Gradle wrapper (generate if missing)
        shell: bash
        run: |
          set -euxo pipefail
          if [ ! -f "$PROJECT_DIR/gradlew" ]; then
            echo "⚙️  generating Gradle wrapper..."
            VER="8.9"
            curl -fsSL "https://services.gradle.org/distributions/gradle-${VER}-bin.zip" -o gradle.zip
            unzip -q gradle.zip -d "$HOME/.gradle-bin"
            "$HOME/.gradle-bin/gradle-${VER}/bin/gradle" -p "$PROJECT_DIR" wrapper --gradle-version "$VER"
          fi
          git config --global core.autocrlf false
          sed -i 's/\r$//' "$PROJECT_DIR/gradlew"
          chmod +x "$PROJECT_DIR/gradlew"
          echo "Wrapper ready at $PROJECT_DIR/gradlew"

      # ยอมรับไลเซนส์ + ติดตั้งแพ็กเกจ SDK (กัน broken pipe)
      - name: Accept licenses & install SDK packages
        shell: bash
        run: |
          set -euxo pipefail
          yes | sdkmanager --licenses || true
          printf 'y\n' | sdkmanager --licenses || true
          sdkmanager "platform-tools" \
                     "platforms;android-34" "build-tools;34.0.0" \
                     "platforms;android-33" "build-tools;33.0.2" || true

      - name: Build Debug APK
        shell: bash
        run: |
          set -euxo pipefail
          (cd "$PROJECT_DIR" && ./gradlew --warning-mode=all assembleDebug)

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.PROJECT_DIR }}/**/build/outputs/**/*.apk
          if-no-files-found: error
